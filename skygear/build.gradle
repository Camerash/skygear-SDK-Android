/*
 * Copyright 2017 Oursky Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

apply plugin: 'checkstyle'
apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

def skygearVersion = "1.4.0"

group = 'io.skygear'
version = skygearVersion

def bintrayUser = System.getenv('BINTRAY_USER')
def bintrayApiKey = System.getenv('BINTRAY_API_KEY')

if (project.rootProject.file('local.properties').exists()) {
    Properties localProperties = new Properties()
    localProperties.load(project.rootProject.file('local.properties').newDataInputStream())

    bintrayUser = localProperties.getProperty('bintrayUser', bintrayUser)
    bintrayApiKey = localProperties.getProperty('bintrayApiKey', bintrayApiKey)
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName skygearVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    implementation 'com.google.android.gms:play-services-base:11.8.0'
    implementation 'com.google.android.gms:play-services-gcm:11.8.0'
    implementation 'com.android.support:appcompat-v7:26.1.0'

    implementation 'com.android.volley:volley:1.0.0'

    implementation 'joda-time:joda-time:2.9.4'
    implementation 'org.java-websocket:Java-WebSocket:1.3.5'

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // use `api` instead of `implementation` to avoid conflicting class
    // ref. https://medium.com/mindorks/implementation-vs-api-in-gradle-3-0-494c817a6fa
    api ('io.skygear:volleyEx:0.0.1') {
        exclude group: 'com.android.support'
    }

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'com.android.support:support-annotations:27.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

task generateJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

afterEvaluate {
    generateJavadocs.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

task generateJavadocsJar(type: Jar) {
    from generateJavadocs.destinationDir
    classifier 'javadoc'
}

generateJavadocsJar.dependsOn generateJavadocs
artifacts {
    archives generateJavadocsJar
    archives generateSourcesJar
}

bintray {
    user = bintrayUser
    key = bintrayApiKey
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'skygear-android'
        userOrg = 'skygeario'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/SkygearIO/skygear-SDK-Android.git'
        publish = true
        version {
            name = skygearVersion
            desc = "Skygear Android SDK ${skygearVersion}"
            released  = new Date()
            vcsTag = skygearVersion
        }
    }
}

task checkstyleMain(type: Checkstyle, group: "verification") {
    source = android.sourceSets.main.java.srcDirs
    classpath = files()
}

check {
    dependsOn checkstyleMain
}

checkstyle {
    toolVersion '8.7'
    configFile file("${rootProject.rootDir}/checkstyle.xml")
    // Should uncomment this line when we fixed all warnings:
    //maxWarnings 0
}
